<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>I love to solve problems - often with software, always with tea.</description>
    <link>https://meikle.io/</link>
    <atom:link href="https://meikle.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 06 Dec 2019 19:03:58 +0000</pubDate>
    <lastBuildDate>Fri, 06 Dec 2019 19:03:58 +0000</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>HP Probook Touchpad Slow After Supend Ubuntu 19.04</title>
        <description>&lt;figure class=&quot;aligncenter&quot;&gt;
    &lt;img src=&quot;/assets/img/touchpad.jpg&quot; /&gt;
    &lt;figcaption&gt;Photo of a Laptop Touchpad&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Having got used to my replacement laptop, I’ve decided to keep using it, but there was one thing annoying me - the trackpad!&lt;/p&gt;

&lt;p&gt;The trackpad is definately not the same quality as the MacBook Pro I was used to, but I could cope as the main features are there. However, I often move around a lot going from meeting to meeting, making use of the sleep/suspend capability.&lt;/p&gt;

&lt;p&gt;That was when the trouble started…&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;sluggish-touch&quot;&gt;Sluggish Touch&lt;/h1&gt;

&lt;p&gt;Upon waking from suspend, the touchpad was sluggish and jumping all over the place, rendering the machine unusable without a mouse!&lt;/p&gt;

&lt;p&gt;The best way it seemed to get the touchpad to behave was to add post suspend script using &lt;em&gt;systemd&lt;/em&gt; to reload the driver. A little hacky but effective!&lt;/p&gt;

&lt;h1 id=&quot;systemd-and-suspendhibernation-hooks&quot;&gt;Systemd and Suspend/Hibernation Hooks&lt;/h1&gt;

&lt;p&gt;It is really easy to perform an action either before or after you suspend, with systemd providing a nice script based hook within its &lt;em&gt;systemd-suspend.service&lt;/em&gt; system service.&lt;/p&gt;

&lt;p&gt;To use this, all you need to do is put an executable script under /usr/lib/systemd/system-sleep/ that checks whether the first argument is ‘pre’ for before the system suspends, or ‘post’ for after the system wakes. The script can have any name.&lt;/p&gt;

&lt;p&gt;You can see more information in it’s man page:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;man systemd-suspend.service&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-script&quot;&gt;The Script&lt;/h1&gt;

&lt;p&gt;To sort this once and for all on the HP ProBook I wrote the following into a file called &lt;em&gt;/lib/systemd/system-sleep/touchpad-reload&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in
  &lt;/span&gt;post&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    /sbin/rmmod i2c_hid &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; /sbin/modprobe i2c_hid
  &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now the touchpad is as happy post-suspend as it is on a fresh restart. Happy days!&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Dec 2019 06:00:00 +0000</pubDate>
        <link>https://meikle.io/technology/hp-probook-touchpad-slow-after-suspend-ubuntu.html</link>
        <guid isPermaLink="true">https://meikle.io/technology/hp-probook-touchpad-slow-after-suspend-ubuntu.html</guid>
        
        <category>technology</category>
        
        <category>hp-probook</category>
        
        <category>touchpad</category>
        
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Cisco Meraki Client VPN on Ubuntu 19.04</title>
        <description>&lt;figure class=&quot;aligncenter&quot;&gt;
    &lt;img src=&quot;/assets/img/cisco-meraki.png&quot; /&gt;
    &lt;figcaption&gt;Photo of Meraki MX84 Meraki Firewall from Cisco Meraki website&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;With my beloved, and worn, day to day laptop having to go in for repair, I had to setup a temporary laptop to work on for a few weeks.&lt;/p&gt;

&lt;p&gt;At work we use Cisco Meraki devices in many places, including the edge of network for our various offices. Whilst their main use is to form a mesh network around our offices and server infrastructure, we also use them to enable a lightweight Client VPN solution.&lt;/p&gt;

&lt;p&gt;The Cisco Meraki Client VPN option provides a L2TP/IPsec based VPN using either its own internal user store, an LDAP Directory, Microsoft Active Directory, or a Radius server to authenticate users.&lt;/p&gt;

&lt;p&gt;Cisco Meraki provide great instructions for Windows, Mac and mobile devices, but really old instructions for Linux. Therefore, I am posting this as much to remind me the next time I need to set it up as to help others.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;install-l2tp-plugins-for-network-manager&quot;&gt;Install L2TP Plugins for Network Manager&lt;/h1&gt;

&lt;p&gt;By default, support for L2TP VPNs is not installed for Network Manager, so we need to install them:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install network-manager-l2tp
sudo apt-get install network-manager-l2tp-gnome

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;disable-system-xl2tpd&quot;&gt;Disable System xl2tpd&lt;/h1&gt;

&lt;p&gt;Network Manager spawns and manages its own instance of &lt;em&gt;xl2tpd&lt;/em&gt; so if there is a system instance still running it will not be able to use UDP port 1701, and will instead use an ephemeral port (i.e. random high port).&lt;/p&gt;

&lt;p&gt;To stop this from happening, we need to stop the deamon and disabling it from starting again:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl stop xl2tpd
sudo systemctl disable xl2tpd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;setup-your-vpn-connection&quot;&gt;Setup Your VPN Connection&lt;/h1&gt;

&lt;p&gt;Now you are ready to add your VPN connection. Having taken the steps above, we’ve Gnome Network Manager settings panel now includes the option to add L2TP VPN connections:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nm-manager-screenshot-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The main settings we need to customise to work with Cisco Meraki Client VPN are on the &lt;em&gt;Identity&lt;/em&gt; tab.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nm-identity-tab.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can give our VPN a name, set the VPN gateway, and add our user credentials (with optional NT Domain depending whether Active Directory is used as the authentication scheme).&lt;/p&gt;

&lt;p&gt;We now need to set our &lt;em&gt;IPsec&lt;/em&gt; and &lt;em&gt;PPP&lt;/em&gt; settings.&lt;/p&gt;

&lt;h3 id=&quot;ipsec-settings&quot;&gt;IPsec Settings&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nm-l2tp-ipsec-settings.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;em&gt;IPsec Settings&lt;/em&gt; we need to tick the &lt;em&gt;Enable IPsec tunnel to L2TP host&lt;/em&gt; checkbox , expand the &lt;em&gt;Advanced&lt;/em&gt; settings, and then add three things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pre-shared Key - adding the key provided by your network administrator&lt;/li&gt;
  &lt;li&gt;Phase1 Algorithm - use the following &lt;em&gt;3des-sha1-modp1024&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Phase2 Algorithm - use the following &lt;em&gt;3des-sha1&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click &lt;em&gt;OK&lt;/em&gt; to set this on the connection.&lt;/p&gt;

&lt;h3 id=&quot;ppp-settings&quot;&gt;PPP Settings&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nm-l2tp-ppp-settings.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;em&gt;PPP Settings&lt;/em&gt; we need to make sure &lt;em&gt;PPP&lt;/em&gt; is the only Authentication mechanism selected.&lt;/p&gt;

&lt;p&gt;The other defaults should be OK, however I’ve included a screenshot to confirm against above.&lt;/p&gt;

&lt;p&gt;Click &lt;em&gt;OK&lt;/em&gt; to set this on the connection.&lt;/p&gt;

&lt;h1 id=&quot;use-your-vpn-connection&quot;&gt;Use Your VPN Connection&lt;/h1&gt;

&lt;p&gt;The VPN should now be available in the Gnome Settings panel:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nm-vpn-settings.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and in the main Gnome Menu for quick connect/disconnect&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/vpn-gnome-settings-menu.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Aug 2019 06:00:00 +0100</pubDate>
        <link>https://meikle.io/technology/cisco-meraki-client-vpn-on-ubuntu-1904.html</link>
        <guid isPermaLink="true">https://meikle.io/technology/cisco-meraki-client-vpn-on-ubuntu-1904.html</guid>
        
        <category>technology</category>
        
        <category>meraki</category>
        
        <category>vpn</category>
        
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Hello world</title>
        <description>&lt;figure class=&quot;aligncenter&quot;&gt;
    &lt;img src=&quot;/assets/img/journey.jpg&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Hello world! Please bear with me, I am just getting setup.&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Jan 2019 08:00:00 +0000</pubDate>
        <link>https://meikle.io/personal/helloworld.html</link>
        <guid isPermaLink="true">https://meikle.io/personal/helloworld.html</guid>
        
        <category>personal</category>
        
        
        <category>personal</category>
        
      </item>
    
  </channel>
</rss>
